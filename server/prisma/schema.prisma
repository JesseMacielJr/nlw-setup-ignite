// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

generator erd {
  provider = "prisma-erd-generator"
}

// Suporta vários BDs: Mongo, Cockroach, SQL, etc...
// Como a "tabela" de cada um deles tem um nome diferente então usamos model que é mais genérico
model Habit {
  // O @default(uuid()) faz com que gere um código único para cada informação.
  id         String   @id @default(uuid())
  title      String
  created_at DateTime

  dayHabits DayHabit[]
  weekDays  HabitWeekDays[]

  // Define o nome que a tabela terá no BD
  @@map("habits")
}

// Relacionamento de 1 para muitos
model HabitWeekDays {
  id       String @id @default(uuid())
  habit_id String
  week_day Int

  habit Habit @relation(fields: [habit_id], references: [id])

  // O mesmo hábito só pode estar disponível uma vez no mesmo dia da semana
  @@unique([habit_id, week_day])
  @@map("habit_week_days")
}

// Só teremos registro no BD dos dias que completamos pelo menos 1 hábito
model Day {
  id   String   @id @default(uuid())
  date DateTime //ex: 2023-01-18T00:00:00

  // Não cria o campo na tabela. É algo para o prisma criar no js
  dayHabits DayHabit[]

  // Cada registro dentro dessa tabela precisa ter o campo date único
  @@unique([date])
  @@map("days")
}

model DayHabit {
  id       String @id @default(uuid())
  // Chaves estrangeiras
  day_id   String
  habit_id String

  day   Day   @relation(fields: [day_id], references: [id])
  habit Habit @relation(fields: [habit_id], references: [id])

  // Não posso ter um hábito completado duas vezes no mesmo dia
  // Não posso ter dois dias iguais para o mesmo hábito
  @@unique([day_id, habit_id])
  @@map("day_habits")
}
